-- Création de la base de données
CREATE DATABASE ewavy COLLATE utf8_general_ci;
​
-- Utilisation de la base de données
USE ewavy;
​
-- Création de la table Client
CREATE TABLE client (
  CLI_ID INT NOT NULL AUTO_INCREMENT,
  CLI_NOM VARCHAR(100) NOT NULL,
  CLI_PRENOM VARCHAR(100) NOT NULL,
  CLI_ADRESSE_MAIL VARCHAR(100) NOT NULL,
  CLI_ADRESSE_POSTALE VARCHAR(250) NULL,
  CLI_NUMERO_TELEPHONE VARCHAR(20) NULL
) ENGINE = InnoDb;
​
-- Création de la table Produit
CREATE TABLE produit (
  PRO_ID INT NOT NULL AUTO_INCREMENT,
  PRO_NOM VARCHAR(100) NOT NULL,
  PRO_PRIX DECIMAL(10, 2) NOT NULL DEFAULT 0,
  PRO_STOCK INT NOT NULL DEFAULT 0,
  PRO_IMAGE VARCHAR(255) NULL,
  PRO_DESCRIPTIF TEXT NULL,
  PRO_GAMME_ID INT NOT NULL
) ENGINE = InnoDb;
​
-- Création de la table Fournisseur
CREATE TABLE fournisseur (
  FOU_ID INT NOT NULL AUTO_INCREMENT,
  FOU_NOM VARCHAR(100) NOT NULL,
  FOU_PRENOM VARCHAR(100) NOT NULL,
  FOU_SOCIETE VARCHAR(100) NOT NULL
) ENGINE = InnoDb;

ALTER TABLE fournisseur
  ADD
    CONSTRAINT PK_FOURNISSEUR
    PRIMARY KEY (FOU_ID);

ALTER TABLE client
  ADD
    CONSTRAINT PK_CLIENT
    PRIMARY KEY (CLI_ID);

ALTER TABLE produit
  ADD
    CONSTRAINT PK_PRODUIT
    PRIMARY KEY (PRO_ID);

ALTER TABLE fournisseur CHANGE FOU_ID FOU_ID INT AUTO_INCREMENT;

ALTER TABLE client CHANGE CLI_ID CLI_ID INT AUTO_INCREMENT;

ALTER TABLE produit CHANGE PRO_ID PRO_ID INT AUTO_INCREMENT;

--Création table Gamme
CREATE TABLE gamme (
  GAM_ID INT NOT NULL AUTO_INCREMENT,
  GAM_NOM VARCHAR(100) NOT NULL,
  GAM_FOURNISSEUR INT NOT NULL,
  PRIMARY KEY (GAM_ID),
  FOREIGN KEY (GAM_FOURNISSEUR) REFERENCES fournisseur(FOU_ID)
) ENGINE = InnoDb;

ALTER TABLE produit
  ADD CONSTRAINT FK_PRO_GAMME_ID
  FOREIGN KEY (PRO_GAMME_ID)
  REFERENCES gamme(GAM_ID);

  --Création table Achat
CREATE TABLE achat (
  ACH_ID INT NOT NULL AUTO_INCREMENT,
  ACH_PRIX_PAYE DECIMAL(10,2) NOT NULL,
  ACH_DATE DATETIME NOT NULL,
  ACH_PRODUIT INT NOT NULL,
  ACH_QUANTITE INT NOT NULL,
  ACH_CLIENT INT NOT NULL,
  PRIMARY KEY (ACH_ID)
) ENGINE = InnoDb;

  --Création table Caractéristique
CREATE TABLE caracteristique (
  CAR_ID INT NOT NULL AUTO_INCREMENT,
  CAR_NOM VARCHAR(100) NOT NULL,
  CAR_VALEUR VARCHAR(100) NOT NULL,
  CAR_PRODUIT INT NOT NULL,
  PRIMARY KEY (CAR_ID)
) ENGINE = InnoDb;

  -- Clés étrangères Caracteristique -> Produit
ALTER TABLE caracteristique
  ADD CONSTRAINT FK_CaracteristiqueProduit
    FOREIGN KEY (CAR_PRODUIT)
    REFERENCES produit(PRO_ID)
    ON DELETE CASCADE;
  ​
  ​
  -- Clés étrangères Achat -> Produit
ALTER TABLE achat
  ADD CONSTRAINT FK_AchatProduit
    FOREIGN KEY (ACH_PRODUIT)
    REFERENCES produit(PRO_ID)
    ON DELETE CASCADE;
  ​
  ​
  -- Clés étrangères Achat -> Client
ALTER TABLE achat
  ADD CONSTRAINT FK_AchatClient
    FOREIGN KEY (ACH_CLIENT)
    REFERENCES client(CLI_ID)
    ON DELETE CASCADE;

INSERT INTO client(CLI_NOM, CLI_PRENOM, CLI_ADRESSE_MAIL, CLI_ADRESSE_POSTALE, CLI_NUMERO_TELEPHONE)
VALUES ('OZAROWSKI', 'XAVIER', 'x.oza@gmail.com', '1 rue du truc', '0612345678');

INSERT INTO fournisseur(FOU_NOM,FOU_PRENOM,FOU_SOCIETE)
VALUES ('DUPONT','Jean','Surfinc');

INSERT INTO gamme(GAM_NOM,GAM_FOURNISSEUR)
VALUES ('Gamme1','1');

INSERT INTO produit(PRO_NOM,PRO_PRIX,PRO_STOCK,PRO_DESCRIPTIF,PRO_GAMME_ID)
VALUES ('Surf1','300','5','Surf qui tue','1');

INSERT INTO caracteristique(CAR_NOM,CAR_VALEUR,CAR_PRODUIT)
VALUES ('Poids','7',1),('Taille','201',1),('Niveau','PRO',1);

INSERT INTO achat(ACH_PRIX_PAYE,ACH_DATE,ACH_CLIENT,ACH_PRODUIT,ACH_QUANTITE)
VALUES ('500','2018-07-18','1','1','2');

SELECT CLI_NOM,CLI_PRENOM FROM client;

SELECT PRO_NOM,PRO_PRIX FROM produit;

SELECT * FROM achat;

SELECT * FROM client
WHERE CLI_ID = '1';

SELECT * FROM Produit
WHERE PRO_NOM = 'Surf1';

SELECT * FROM Produit
WHERE PRO_NOM LIKE '%u%';

SELECT * FROM Client
WHERE CLI_ID = 1 OR CLI_ID = 2;

SELECT * FROM client
WHERE CLI_ID IN (1,2);

SELECT * FROM Achat, Client
WHERE ACH_CLIENT = 1 AND CLI_ID = ACH_CLIENT;

SELECT * FROM Achat,Produit
WHERE PRO_ID = 1 AND ACH_PRODUIT = PRO_ID;

-- SELECT a.ACH_DATE,a.ACH_PRIX_PAYE,p.PRO_NOM,c.CLI_NOM,c.CLI_PRENOM
--   FROM Achat a
--   LEFT JOIN Client c ON c.CLI_ID = a.ACH_CLIENT
--   LEFT JOIN Produit p ON p.PRO_ID = a.ACH_PRODUIT;

SELECT a.ACH_DATE,a.ACH_PRIX_PAYE,p.PRO_NOM,c.CLI_NOM,c.CLI_PRENOM
  FROM Achat a
  INNER JOIN Client c ON c.CLI_ID = a.ACH_CLIENT
  INNER JOIN Produit p ON p.PRO_ID = a.ACH_PRODUIT;

SELECT c.CLI_NOM,c.CLI_PRENOM,a.ACH_DATE,a.ACH_PRIX_PAYE,p.*
  FROM client c
  LEFT JOIN achat a ON a.ACH_CLIENT = c.CLI_ID
  LEFT JOIN produit p ON p.PRO_ID = a.ACH_PRODUIT;

SELECT c.CLI_NOM,c.CLI_PRENOM,a.ACH_DATE,a.ACH_PRIX_PAYE
  FROM client c
  LEFT JOIN achat a ON a.ACH_CLIENT = c.CLI_ID;

UPDATE client
SET CLI_NOM = 'BIDULE'
WHERE CLI_ID = 1;

UPDATE produit
SET PRO_PRIX = PRO_PRIX * 1.1
WHERE PRO_ID = 1;

UPDATE produit p
LEFT JOIN achat a ON a.ACH_PRODUIT = p.PRO_ID
SET PRO_PRIX = PRO_PRIX * 0.8
WHERE ACH_ID IS NULL;

INSERT INTO produit(PRO_NOM,PRO_PRIX,PRO_STOCK,PRO_DESCRIPTIF,PRO_GAMME_ID)
VALUES ('Surf2','30','10','Surf nul','1');

INSERT INTO produit(PRO_NOM,PRO_PRIX,PRO_STOCK,PRO_DESCRIPTIF,PRO_GAMME_ID)
VALUES ('Surf3','200','10','Surf sous marin','1');

DELETE FROM produit WHERE PRO_ID = 4;

DELETE p
FROM produit p
  LEFT JOIN achat a ON a.ACH_PRODUIT = p.PRO_ID
  WHERE ACH_ID IS NULL;

INSERT INTO client(CLI_NOM, CLI_PRENOM, CLI_ADRESSE_MAIL, CLI_ADRESSE_POSTALE, CLI_NUMERO_TELEPHONE)
VALUES ('OZA', 'XAV', 'x.oz@gmail.com', '1 rue du machin', '0612345677');

INSERT INTO client(CLI_NOM, CLI_PRENOM, CLI_ADRESSE_MAIL, CLI_ADRESSE_POSTALE, CLI_NUMERO_TELEPHONE)
VALUES ('DUPONT', 'JEAN', 'j.d@gmail.com', '1 rue du bidule', '0612545677');

SELECT * FROM client
ORDER BY CLI_PRENOM, CLI_NOM;

-- SELECT a.ACH_DATE
-- FROM Achat a
-- LEFT JOIN Client c ON c.CLI_ID = a.ACH_CLIENT
-- LEFT JOIN Produit p ON p.PRO_ID = a.ACH_PRODUIT
-- LEFT JOIN Gamme g ON g.GAM_ID = p.PRO_GAMME_ID
-- LIMIT

SELECT *
  FROM Achat a
  INNER JOIN Client c ON c.CLI_ID = a.ACH_CLIENT
  INNER JOIN Produit p ON p.PRO_ID = a.ACH_PRODUIT
  INNER JOIN Gamme g ON g.GAM_ID = p.PRO_GAMME_ID
  INNER JOIN fournisseur f ON f.FOU_ID = g.GAM_FOURNISSEUR
ORDER BY ACH_DATE DESC
LIMIT 0,2;

SELECT CLI_NOM,CLI_PRENOM,SUM(ACH_PRIX_PAYE) AS CA
  FROM client c
  LEFT JOIN achat a ON a.ACH_CLIENT = c.CLI_ID
  GROUP BY CLI_NOM,CLI_PRENOM
  ORDER BY CA DESC;

SELECT CLI_NOM,CLI_PRENOM,SUM(ACH_PRIX_PAYE) AS CA
  FROM client c
  LEFT JOIN achat a ON a.ACH_CLIENT = c.CLI_ID
  GROUP BY CLI_NOM,CLI_PRENOM
  HAVING SUM(ACH_PRIX_PAYE) < 550 AND SUM(ACH_PRIX_PAYE) > 450;
  HAVING SUM(ACH_PRIX_PAYE) BETWEEN 100 AND 200;

SELECT CLI_NOM,CLI_PRENOM,
  (
    SELECT COUNT(DISTINCT ACH_PRODUIT)
    FROM achat a
    WHERE a.ACH_CLIENT = c.CLI_ID
  ) AS nombreProduits
FROM client c;



SELECT CLI_NOM,CLI_PRENOM
      MIN(ACH_PRIX_PAYE) AS PRIX_MINI,
      (
        SELECT PRO_NOM
        FROM produit p
        INNER JOIN achat a ON a.ACH_PRODUIT = p.PRO_ID
        WHERE a.ACH_CLIENT = c.CLI_ID
        ORDER BY ACH_PRIX_PAYE ASC
        LIMIT 0,1
      ) AS NOM_MINI,
      MAX(ACH_PRIX_PAYE) AS PRIX_MAXI,
      (
        SELECT PRO_NOM
        FROM produit p
        INNER JOIN achat a ON a.ACH_PRODUIT = p.PRO_ID
        WHERE a.ACH_CLIENT = c.CLI_ID
        ORDER BY ACH_PRIX_PAYE DESC
        LIMIT 0,1
      ) AS NOM_MAXI,
      AVG(ACH_PRIX_PAYE) AS PANIER_MOYEN,
      MIN(ACH_DATE) AS PREMIERE_DATE,
      MAX(ACH_DATE) AS DERNIERE_DATE,

FROM Client c
LEFT JOIN achat a ON a.ACH_CLIENT = c.CLI_ID
GROUP BY CLI_ID,CLI_NOM,CLI_PRENOM;
